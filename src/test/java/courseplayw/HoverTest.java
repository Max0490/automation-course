package courseplayw;

import com.microsoft.playwright.*;
import com.microsoft.playwright.options.WaitForSelectorState;
import com.microsoft.playwright.options.WaitUntilState;
import org.junit.jupiter.api.*;

import static org.junit.jupiter.api.Assertions.*;

public class HoverTest {
    static Playwright playwright;
    static Browser browser;
    BrowserContext context;
    Page page;

    @BeforeAll
    static void setupClass() {
        playwright = Playwright.create();
        browser = playwright.chromium().launch(new BrowserType.LaunchOptions().setHeadless(false));
    }

    @BeforeEach
    void setup() {
        context = browser.newContext();
        page = context.newPage();
    }

    @Test
    void testHoverProfiles() {
        page.navigate("https://the-internet.herokuapp.com/hovers",
                new Page.NavigateOptions().setWaitUntil(WaitUntilState.DOMCONTENTLOADED));


        Locator figures = page.locator(".figure");
        int count = figures.count();

        assertTrue(count > 0, "–î–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∫–ª–∞—Å—Å–æ–º .figure");
        System.out.println("‚úÖ –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: " + count);

        for (int i = 0; i < count; i++) {
            System.out.println("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ #" + (i + 1));

            Locator figure = figures.nth(i);


            figure.hover();


            page.waitForTimeout(500); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏


            Locator profileLink = figure.locator("text=View profile");
            assertTrue(profileLink.isVisible(),
                    "–°—Å—ã–ª–∫–∞ 'View profile' –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∏–¥–∏–º–æ–π –ø–æ—Å–ª–µ –Ω–∞–≤–µ–¥–µ–Ω–∏—è");

            System.out.println("‚úÖ –°—Å—ã–ª–∫–∞ 'View profile' –ø–æ—è–≤–∏–ª–∞—Å—å");


            profileLink.click();


            page.waitForURL("**/users/**");


            String currentUrl = page.url();
            assertTrue(currentUrl.contains("/users/"),
                    "URL –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å /users/, —Ç–µ–∫—É—â–∏–π URL: " + currentUrl);


            String[] urlParts = currentUrl.split("/users/");
            assertTrue(urlParts.length > 1, "URL –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
            assertTrue(urlParts[1].matches("\\d+"), "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º");

            System.out.println("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + currentUrl);


            Locator pageHeader = page.locator("h1");
            assertTrue(pageHeader.isVisible(), "–ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫");

            System.out.println("‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: " + pageHeader.textContent());


            page.goBack();


            page.waitForURL("https://the-internet.herokuapp.com/hovers");

            System.out.println("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É hovers");
        }
    }


    @AfterEach
    void teardown() {
        if (context != null) {
            context.close();
        }
    }

    @AfterAll
    static void teardownClass() {
        if (browser != null) {
            browser.close();
        }
        if (playwright != null) {
            playwright.close();
        }
    }
}
